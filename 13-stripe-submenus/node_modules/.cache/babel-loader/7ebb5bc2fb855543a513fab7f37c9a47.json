{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/13-stripe-submenus/setup/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location\n  } = useGlobalContext();\n  const container = useRef(null);\n  useEffect(() => {\n    const submenu = container.current;\n    const {\n      center,\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"submenu\");\n};\n\nexport default Submenu;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/13-stripe-submenus/setup/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","container","submenu","current","center","bottom","style","left","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA8BH,gBAAgB,EAApD;AACA,QAAMI,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAGD,SAAS,CAACE,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBL,QAA3B;AACAE,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B;AACD,GALQ,EAKN,CAACL,QAAD,CALM,CAAT;AAOA,sBACE;AACE,IAAA,SAAS,EAAG,GAAED,aAAa,GAAG,cAAH,GAAoB,SAAU,EAD3D;AAEE,IAAA,GAAG,EAAEE,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAQD,CApBD;;AAsBA,eAAeH,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n\n  const { isSubmenuOpen, location } = useGlobalContext();\n  const container = useRef(null);\n\n  useEffect(() => {\n    const submenu = container.current;\n    const { center, bottom } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n  }, [location]);\n\n  return (\n    <aside\n      className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`}\n      ref={container}\n    >\n      submenu\n    </aside>\n  );\n}\n\nexport default Submenu\n"]},"metadata":{},"sourceType":"module"}