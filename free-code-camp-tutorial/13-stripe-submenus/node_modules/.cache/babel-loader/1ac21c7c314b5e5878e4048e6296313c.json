{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/13-stripe-submenus/setup/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location,\n    page: {\n      page,\n      links\n    }\n  } = useGlobalContext();\n  const container = useRef(null);\n  const [columns, setColumns] = useState('col-2');\n  useEffect(() => {\n    const submenu = container.current;\n    const {\n      center,\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n  }, [location]);\n  const displayLinks = links.map((link, index) => {\n    const {\n      label,\n      icon,\n      url\n    } = link;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: index,\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, icon, \" \", label);\n  });\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, page), /*#__PURE__*/React.createElement(\"div\", {\n    className: `submenu-center col-2`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, displayLinks));\n};\n\nexport default Submenu;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/13-stripe-submenus/setup/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","page","links","container","columns","setColumns","submenu","current","center","bottom","style","left","top","displayLinks","map","link","index","label","icon","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,IAAI,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAjC,MAAqDL,gBAAgB,EAA3E;AACA,QAAMM,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,OAAD,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAGH,SAAS,CAACI,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBT,QAA3B;AACAM,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B;AACD,GALQ,EAKN,CAACT,QAAD,CALM,CAAT;AAOA,QAAMa,YAAY,GAAGX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9C,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAuBJ,IAA7B;AACA,wBACE;AAAG,MAAA,GAAG,EAAEC,KAAR;AAAe,MAAA,IAAI,EAAEG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,OACUD,KADV,CADF;AAKD,GAPoB,CAArB;AASA,sBACE;AACE,IAAA,SAAS,EAAG,GAAElB,aAAa,GAAG,cAAH,GAAoB,SAAU,EAD3D;AAEE,IAAA,GAAG,EAAEI,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,CAJF,eAKE;AAAK,IAAA,SAAS,EAAG,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIY,YADJ,CALF,CADF;AAWD,CAjCD;;AAmCA,eAAef,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n\n  const { isSubmenuOpen, location, page: { page, links } } = useGlobalContext();\n  const container = useRef(null);\n  const [ columns, setColumns ] = useState('col-2');\n\n  useEffect(() => {\n    const submenu = container.current;\n    const { center, bottom } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n  }, [location]);\n\n  const displayLinks = links.map((link, index) => {\n    const { label, icon, url } = link;\n    return (\n      <a key={index} href={url}>\n        {icon} {label}\n      </a>\n    );\n  });\n  \n  return (\n    <aside\n      className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`}\n      ref={container}\n    >\n      <h4>{page}</h4>\n      <div className={`submenu-center col-2`}>\n        { displayLinks }\n      </div>\n    </aside>\n  );\n}\n\nexport default Submenu\n"]},"metadata":{},"sourceType":"module"}