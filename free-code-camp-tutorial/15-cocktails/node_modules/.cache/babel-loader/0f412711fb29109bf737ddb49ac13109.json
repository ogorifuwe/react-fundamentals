{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/15-cocktails/setup/src/pages/SingleCocktail.js\";\nimport React from 'react';\nimport Loading from '../components/Loading';\nimport { useParams, Link } from 'react-router-dom';\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\n\nconst SingleCocktail = () => {\n  const {\n    id\n  } = useParams();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n  React.useEffect(() => {\n    try {\n      setIsLoading(true);\n\n      async function getCocktailById() {\n        const response = await fetch(`${url}${id}`);\n        const data = await response.json();\n\n        if (data.drinks) {\n          const {\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: type,\n            strCategory: category,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5\n          } = data.drinks[0];\n          const ingredients = [strIngredient1, strIngredient2, strIngredient3, strIngredient4, strIngredient5];\n          const newCocktail = {\n            name,\n            image,\n            type,\n            category,\n            glass,\n            instructions,\n            ingredients\n          };\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  }, [id]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, id));\n};\n\nexport default SingleCocktail;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/15-cocktails/setup/src/pages/SingleCocktail.js"],"names":["React","Loading","useParams","Link","url","SingleCocktail","id","isLoading","setIsLoading","useState","cocktail","setCocktail","useEffect","getCocktailById","response","fetch","data","json","drinks","strDrink","name","strDrinkThumb","image","strAlcoholic","type","strCategory","category","strGlass","glass","strInstructions","instructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","newCocktail","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,MAAMC,GAAG,GAAG,2DAAZ;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAE3B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAAEK,SAAF,EAAaC,YAAb,IAA8BR,KAAK,CAACS,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BX,KAAK,CAACS,QAAN,CAAe,IAAf,CAAlC;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,QAAI;AACFJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,qBAAeK,eAAf,GAAiC;AAC/B,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,GAAI,GAAEE,EAAG,EAAb,CAA5B;AACA,cAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,YAAID,IAAI,CAACE,MAAT,EAAiB;AACf,gBAAM;AACJC,YAAAA,QAAQ,EAAEC,IADN;AAEJC,YAAAA,aAAa,EAAEC,KAFX;AAGJC,YAAAA,YAAY,EAAEC,IAHV;AAIJC,YAAAA,WAAW,EAAEC,QAJT;AAKJC,YAAAA,QAAQ,EAAEC,KALN;AAMJC,YAAAA,eAAe,EAAEC,YANb;AAOJC,YAAAA,cAPI;AAQJC,YAAAA,cARI;AASJC,YAAAA,cATI;AAUJC,YAAAA,cAVI;AAWJC,YAAAA;AAXI,cAYFnB,IAAI,CAACE,MAAL,CAAY,CAAZ,CAZJ;AAcA,gBAAMkB,WAAW,GAAG,CAClBL,cADkB,EAElBC,cAFkB,EAGlBC,cAHkB,EAIlBC,cAJkB,EAKlBC,cALkB,CAApB;AAQA,gBAAME,WAAW,GAAG;AAClBjB,YAAAA,IADkB;AACZE,YAAAA,KADY;AACLE,YAAAA,IADK;AACCE,YAAAA,QADD;AACWE,YAAAA,KADX;AACkBE,YAAAA,YADlB;AACgCM,YAAAA;AADhC,WAApB;AAIAzB,UAAAA,WAAW,CAAC0B,WAAD,CAAX;AACD,SA5BD,MA4BO;AACH1B,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAEDH,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACA,KAvCD,CAuCE,OAAM8B,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA9B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACF,GA5CD,EA4CG,CAAEF,EAAF,CA5CH;;AA8CA,MAAIC,SAAJ,EAAe;AACb,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,EAAL,CADF,CADF;AAKD,CA5DD;;AA8DA,eAAeD,cAAf","sourcesContent":["import React from 'react'\nimport Loading from '../components/Loading'\nimport { useParams, Link } from 'react-router-dom'\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i='\n\nconst SingleCocktail = () => {\n\n  const { id } = useParams();\n  const [ isLoading, setIsLoading ] = React.useState(false);\n  const [ cocktail, setCocktail ] = React.useState(null);\n\n  React.useEffect(() => {\n    try {\n      setIsLoading(true);\n      async function getCocktailById() {\n        const response = await fetch(`${url}${id}`);\n        const data = await response.json();\n        if (data.drinks) {\n          const {\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: type,\n            strCategory: category,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n          } = data.drinks[0];\n\n          const ingredients = [\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5\n          ];\n\n          const newCocktail = {\n            name, image, type, category, glass, instructions, ingredients\n          };\n\n          setCocktail(newCocktail);\n        } else {\n            setCocktail(null);\n        }\n\n        setIsLoading(false);\n    }\n    } catch(error) {\n        console.log(error);\n        setIsLoading(false);\n    }\n  }, [ id ]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <h2>{id}</h2>\n    </div>\n  )\n}\n\nexport default SingleCocktail\n"]},"metadata":{},"sourceType":"module"}