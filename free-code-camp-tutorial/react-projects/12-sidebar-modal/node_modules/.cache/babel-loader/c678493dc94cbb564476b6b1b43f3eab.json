{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/12-sidebar-modal/setup/src/context.js\";\nimport React, { useState, useContext } from 'react';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: \"hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n}; // custom hook\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/12-sidebar-modal/setup/src/context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","openSidebar","closeSidebar","openModal","closeModal","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAEpC,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAEQ,WAAF,EAAeC,cAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG,MAAM;AACzBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACtBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACvBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,QADJ,CADF;AAKD,CA1BD,C,CA4BA;;;AACA,OAAO,MAAMS,gBAAgB,GAAG,MAAM;AACpC,SAAOb,UAAU,CAACC,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext } from 'react'\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  \n  const [ isSidebarOpen, setIsSidebarOpen ] = useState(false);\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  }\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  }\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  }\n\n  return (\n    <AppContext.Provider value='hello'>\n      { children }\n    </AppContext.Provider>\n  );\n}\n\n// custom hook\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n}\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}