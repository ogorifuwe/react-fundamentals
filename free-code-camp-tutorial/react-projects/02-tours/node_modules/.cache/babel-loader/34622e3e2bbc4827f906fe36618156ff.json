{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/02-tours/setup/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport Tours from './Tours'; // ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\n\nconst url = 'https://course-api.com/react-tours-project';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [tours, setTours] = useState([]);\n\n  const fetchTours = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const retrievedTours = await response.json();\n\n      if (response.status >= 200 && response.status <= 299) {\n        isLoading(false);\n        setTours(retrievedTours);\n        console.log('I\\'m here');\n      } else {\n        throw new Error(response.statusText);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      console.log(`There was an error: ${error}`);\n    }\n  };\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Tours, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/02-tours/setup/src/App.js"],"names":["React","useState","useEffect","Loading","Tours","url","App","isLoading","setIsLoading","tours","setTours","fetchTours","response","fetch","retrievedTours","json","status","console","log","Error","statusText","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;;AACA,MAAMC,GAAG,GAAG,4CAAZ;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAEQ,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC7BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,CAA5B;AACA,YAAMS,cAAc,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA7B;;AACA,UAAIH,QAAQ,CAACI,MAAT,IAAmB,GAAnB,IAA0BJ,QAAQ,CAACI,MAAT,IAAmB,GAAjD,EAAsD;AACpDT,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,QAAAA,QAAQ,CAACI,cAAD,CAAR;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,OAJD,MAIO;AACH,cAAM,IAAIC,KAAJ,CAAUP,QAAQ,CAACQ,UAAnB,CAAN;AACH;AACF,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBG,KAAM,EAAzC;AACH;AACF,GAjBD;;AAmBAnB,EAAAA,SAAS,CAAE,MAAM;AAAES,IAAAA,UAAU;AAAI,GAAxB,EAA0B,EAA1B,CAAT;;AAEA,MAAIJ,SAAJ,EAAe;AACb,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH;AAKD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Loading from './Loading'\nimport Tours from './Tours'\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = 'https://course-api.com/react-tours-project'\n\nfunction App() {\n\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [ tours, setTours ] = useState([]);\n\n  const fetchTours = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const retrievedTours = await response.json();\n      if (response.status >= 200 && response.status <= 299) {\n        isLoading(false);\n        setTours(retrievedTours);\n        console.log('I\\'m here');\n      } else {\n          throw new Error(response.statusText);\n      }\n    } catch (error) {\n        setIsLoading(false);\n        console.log(`There was an error: ${error}`);\n    }\n  }\n\n  useEffect( () => { fetchTours() }, []);\n\n  if (isLoading) {\n    return (\n      <main>\n        <Loading />\n      </main>\n    );\n  }\n\n  return (\n     <main>\n      <Tours />\n    </main> \n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}