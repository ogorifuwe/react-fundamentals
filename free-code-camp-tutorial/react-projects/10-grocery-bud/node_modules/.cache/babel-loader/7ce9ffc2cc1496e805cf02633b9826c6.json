{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/10-grocery-bud/setup/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if (list) return JSON.parse(localStorage.getItem('list'));else return [];\n};\n\nfunction App() {\n  const [item, setItem] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditable, setIsEditable] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [alert, setAlert] = useState({\n    isShowing: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!item) {\n      showAlert(true, 'Please enter a value', 'danger');\n    } else if (item && isEditable) {\n      const ephemeralList = list.map(currItem => {\n        if (currItem.id === editId) return { ...currItem,\n          title: item\n        };\n        return currItem;\n      });\n      setList(ephemeralList);\n      setItem('');\n      setEditId(null);\n      setIsEditable(false);\n      showAlert(true, 'Item name has been updated', 'success');\n    } else {\n      showAlert(true, 'Item added to the list', 'success');\n      const newGroceryItem = {\n        id: new Date().getTime().toString(),\n        title: item\n      };\n      setList([...list, newGroceryItem]);\n      setItem('');\n    }\n  };\n\n  const handleGroceryInput = e => {\n    e.preventDefault();\n    let groceryItem = e.target.value;\n    setItem(groceryItem);\n  };\n\n  const showAlert = (isShowing = false, msg = '', type = '') => {\n    setAlert({\n      isShowing,\n      msg,\n      type\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'list emptied', 'danger');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'item removed', 'success');\n    let updatedList = list.filter(item => item.id !== id);\n    setList(updatedList);\n  };\n\n  const editItem = id => {\n    const currentItem = list.find(item => item.id === id);\n    setIsEditable(true);\n    setEditId(id);\n    setItem(currentItem.title);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, alert.isShowing && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Grocery Bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"grocery\",\n    type: \"text\",\n    placeholder: \"e.g eggs\",\n    value: item,\n    onChange: handleGroceryInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, isEditable ? 'Edit' : 'Submit'))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    removeItem: removeItem,\n    editItem: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Clear Items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","getLocalStorage","list","localStorage","getItem","JSON","parse","App","item","setItem","setList","isEditable","setIsEditable","editId","setEditId","alert","setAlert","isShowing","msg","type","handleSubmit","e","preventDefault","showAlert","ephemeralList","map","currItem","id","title","newGroceryItem","Date","getTime","toString","handleGroceryInput","groceryItem","target","value","clearList","removeItem","updatedList","filter","editItem","currentItem","find","stringify","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if (list) \n    return JSON.parse(localStorage.getItem('list'));\n  else\n    return [];\n} \n\nfunction App() {\n\n  const [ item, setItem ] = useState('');\n  const [ list, setList ] = useState([]);\n  const [ isEditable, setIsEditable ] = useState(false);\n  const [ editId, setEditId ] = useState(null);\n  const [ alert, setAlert ] = useState({ isShowing: false, msg: '', type: '' });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!item) {\n      showAlert(true, 'Please enter a value', 'danger');\n    } else if (item && isEditable) {\n        const ephemeralList = list.map(currItem => {\n          if (currItem.id === editId)\n            return { ...currItem, title: item }\n          return currItem;\n        });\n\n        setList(ephemeralList);\n        setItem('');\n        setEditId(null);\n        setIsEditable(false);\n        showAlert(true, 'Item name has been updated', 'success');\n    } else {\n        showAlert(true, 'Item added to the list', 'success');\n        const newGroceryItem = {\n          id: new Date().getTime().toString(),\n          title: item\n        }\n        setList([ ...list, newGroceryItem ]);\n        setItem('');\n    }\n  }\n\n  const handleGroceryInput = (e) => {\n    e.preventDefault();\n    let groceryItem = e.target.value;\n    setItem(groceryItem);\n  }\n\n  const showAlert = (isShowing = false, msg = '', type = '') => {\n    setAlert({isShowing, msg, type});\n  }\n\n  const clearList = () => {\n    showAlert(true, 'list emptied', 'danger');\n    setList([]);\n  }\n\n  const removeItem = (id) => {\n    showAlert(true, 'item removed', 'success', );\n    let updatedList = list.filter(item => item.id !== id);\n    setList(updatedList);\n  }\n\n  const editItem = (id) => {\n    const currentItem = list.find(item => item.id === id);\n    setIsEditable(true);\n    setEditId(id);\n    setItem(currentItem.title);\n  }\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <section className='section-center'>\n      <form\n        className='grocery-form'\n        onSubmit={handleSubmit}\n      >\n        {alert.isShowing && <Alert {...alert} removeAlert={showAlert} list={list} />}\n        <h3>Grocery Bud</h3>\n        <div className='form-control'>\n          <input\n            className='grocery'\n            type='text'\n            placeholder='e.g eggs'\n            value={item}\n            onChange={handleGroceryInput}\n          />\n          <button\n            className='submit-btn'\n            type='submit'\n          >\n            {isEditable ? 'Edit' : 'Submit'}\n          </button>\n        </div>\n      </form>\n      {\n        list.length > 0 && (\n          <div className='grocery-container'>\n            <List items={list} removeItem={removeItem} editItem={editItem} />\n            <button\n              className='clear-btn'\n              onClick={clearList}\n            >\n              Clear Items\n            </button>\n          </div>\n        )\n      }\n    </section>  \n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}