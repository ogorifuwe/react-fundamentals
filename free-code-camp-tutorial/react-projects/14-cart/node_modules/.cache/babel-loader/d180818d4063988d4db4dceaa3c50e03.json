{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case 'CLEAR_CART':\n      return { ...state,\n        cart: []\n      };\n\n    case 'REMOVE_CART_ITEM':\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload)\n      };\n\n    case 'INCREASE_ITEM_COUNT':\n      return { ...state,\n        cart: state.cart.map(item => {\n          if (item.id === action.payload) {\n            return { ...item,\n              amount: item.amount + 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case 'DECREASE_ITEM_COUNT':\n      return { ...state,\n        cart: state.cart.map(item => {\n          if (item.id === action.payload) {\n            return { ...item,\n              amount: item.amount - 1\n            };\n          }\n\n          return item;\n        }).filter(item => item.amount > 0)\n      };\n\n    case 'GET_TOTAL':\n      const {\n        total,\n        amount\n      } = state.cart.reduce((cartObject, item) => {\n        const {\n          price,\n          amount\n        } = item;\n        console.log(cartObject);\n        cartObject.total += price;\n        cartObject.amount += amount;\n        return currentTotal;\n      }, {\n        total: 0,\n        amount: 0\n      });\n      return { ...state,\n        total,\n        amount\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/14-cart/setup/src/reducer.js"],"names":["reducer","state","action","type","cart","filter","item","id","payload","map","amount","total","reduce","cartObject","price","console","log","currentTotal"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AACKG,QAAAA,IAAI,EAAE;AADX,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGH,KADE;AACKG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA9C;AADX,OAAP;;AAIF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGP,KADE;AACKG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWK,GAAX,CAAeH,IAAI,IAAI;AACrC,cAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB,EAAgC;AAC9B,mBAAO,EAAE,GAAGF,IAAL;AAAWI,cAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAL,GAAc;AAAjC,aAAP;AACD;;AACD,iBAAOJ,IAAP;AACD,SALe;AADX,OAAP;;AASF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGL,KADE;AACKG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWK,GAAX,CAAeH,IAAI,IAAI;AACrC,cAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB,EAAgC;AAC9B,mBAAO,EAAE,GAAGF,IAAL;AAAWI,cAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAL,GAAc;AAAjC,aAAP;AACD;;AACD,iBAAOJ,IAAP;AACD,SALe,EAKbD,MALa,CAKNC,IAAI,IAAIA,IAAI,CAACI,MAAL,GAAc,CALhB;AADX,OAAP;;AASF,SAAK,WAAL;AACE,YAAM;AAAEC,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAoBT,KAAK,CAACG,IAAN,CAAWQ,MAAX,CAAkB,CAACC,UAAD,EAAaP,IAAb,KAAsB;AAChE,cAAM;AAAEQ,UAAAA,KAAF;AAASJ,UAAAA;AAAT,YAAoBJ,IAA1B;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAA,QAAAA,UAAU,CAACF,KAAX,IAAoBG,KAApB;AACAD,QAAAA,UAAU,CAACH,MAAX,IAAqBA,MAArB;AACA,eAAOO,YAAP;AACD,OANyB,EAMvB;AAAEN,QAAAA,KAAK,EAAE,CAAT;AAAYD,QAAAA,MAAM,EAAE;AAApB,OANuB,CAA1B;AAOA,aAAO,EAAE,GAAGT,KAAL;AAAYU,QAAAA,KAAZ;AAAmBD,QAAAA;AAAnB,OAAP;;AAEF;AACE,aAAOT,KAAP;AA1CJ;AA4CD,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n  switch(action.type) {\n    case 'CLEAR_CART':\n      return {\n        ...state, cart: []\n      }\n\n    case 'REMOVE_CART_ITEM':\n      return {\n        ...state, cart: state.cart.filter(item => (item.id !== action.payload))\n      }\n\n    case 'INCREASE_ITEM_COUNT':\n      return {\n        ...state, cart: state.cart.map(item => {\n          if (item.id === action.payload) {\n            return { ...item, amount: item.amount + 1 }\n          }\n          return item;\n        })\n      }\n\n    case 'DECREASE_ITEM_COUNT':\n      return {\n        ...state, cart: state.cart.map(item => {\n          if (item.id === action.payload) {\n            return { ...item, amount: item.amount - 1 }\n          }\n          return item;\n        }).filter(item => item.amount > 0)\n      }\n\n    case 'GET_TOTAL':\n      const { total, amount } = state.cart.reduce((cartObject, item) => {\n        const { price, amount } = item;\n        console.log(cartObject);\n        cartObject.total += price;\n        cartObject.amount += amount;\n        return currentTotal;\n      }, { total: 0, amount: 0 })\n      return { ...state, total, amount }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}