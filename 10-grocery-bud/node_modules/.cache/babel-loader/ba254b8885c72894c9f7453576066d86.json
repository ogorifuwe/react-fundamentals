{"ast":null,"code":"var _jsxFileName = \"/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/10-grocery-bud/setup/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nfunction App() {\n  const [item, setItem] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditable, setIsEditable] = useState(false);\n  const [editId, setSetId] = useState(null);\n  const [alert, setAlert] = useState({\n    isShowing: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {// TODO: display alert\n    } else if (item && isEditable) {// TODO: handle edit \n    } else {\n      const newGroceryItem = {\n        id: new Date().igetTime().toString(),\n        title: item\n      };\n      setList([...list, newGroceryItem]);\n      setList('');\n    }\n  };\n\n  const handleGroceryInput = e => {\n    e.preventDefault();\n    let groceryItem = e.target.value;\n    setItem(groceryItem);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, alert.isShowing && /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Grocery Bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"grocery\",\n    type: \"text\",\n    placeholder: \"e.g eggs\",\n    value: item,\n    onChange: handleGroceryInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, isEditable ? 'Edit' : 'Submit'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Clear Items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oi/Development/client-side/react/free-code-camp-tutorial/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","item","setItem","list","setList","isEditable","setIsEditable","editId","setSetId","alert","setAlert","isShowing","msg","type","handleSubmit","e","preventDefault","name","newGroceryItem","id","Date","igetTime","toString","title","handleGroceryInput","groceryItem","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEO,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAES,UAAF,EAAcC,aAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAEW,MAAF,EAAUC,QAAV,IAAuBZ,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAAEa,KAAF,EAASC,QAAT,IAAsBd,QAAQ,CAAC;AAAEe,IAAAA,SAAS,EAAE,KAAb;AAAoBC,IAAAA,GAAG,EAAE,EAAzB;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAAD,CAApC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACC,IAAL,EAAW,CACT;AACD,KAFD,MAEO,IAAIhB,IAAI,IAAII,UAAZ,EAAwB,CAC3B;AACH,KAFM,MAEA;AACH,YAAMa,cAAc,GAAG;AACrBC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,QAAX,GAAsBC,QAAtB,EADiB;AAErBC,QAAAA,KAAK,EAAEtB;AAFc,OAAvB;AAIAG,MAAAA,OAAO,CAAC,CAAE,GAAGD,IAAL,EAAWe,cAAX,CAAD,CAAP;AACAd,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACF,GAfD;;AAiBA,QAAMoB,kBAAkB,GAAIT,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIS,WAAW,GAAGV,CAAC,CAACW,MAAF,CAASC,KAA3B;AACAzB,IAAAA,OAAO,CAACuB,WAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,QAAQ,EAAEX,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,KAAK,CAACE,SAAN,iBAAmB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJtB,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,eAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEV,IAJT;AAKE,IAAA,QAAQ,EAAEuB,kBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGnB,UAAU,GAAG,MAAH,GAAY,QAJzB,CARF,CANF,CADF,eAuBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAvBF,CADF;AAgCD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nfunction App() {\n\n  const [ item, setItem ] = useState('');\n  const [ list, setList ] = useState([]);\n  const [ isEditable, setIsEditable ] = useState(false);\n  const [ editId, setSetId ] = useState(null);\n  const [ alert, setAlert ] = useState({ isShowing: false, msg: '', type: '' });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      // TODO: display alert\n    } else if (item && isEditable) {\n        // TODO: handle edit \n    } else {\n        const newGroceryItem = {\n          id: new Date().igetTime().toString(),\n          title: item\n        }\n        setList([ ...list, newGroceryItem ]);\n        setList('');\n    }\n  }\n\n  const handleGroceryInput = (e) => {\n    e.preventDefault();\n    let groceryItem = e.target.value;\n    setItem(groceryItem);\n  }\n\n  return (\n    <section className='section-center'>\n      <form\n        className='grocery-form'\n        onSubmit={handleSubmit}\n      >\n        {alert.isShowing && <Alert />}\n        <h3>Grocery Bud</h3>\n        <div className='form-control'>\n          <input\n            className='grocery'\n            type='text'\n            placeholder='e.g eggs'\n            value={item}\n            onChange={handleGroceryInput}\n          />\n          <button\n            className='submit-btn'\n            type='submit'\n          >\n            {isEditable ? 'Edit' : 'Submit'}\n          </button>\n        </div>\n      </form>\n      <div className='grocery-container'>\n        <List/>\n        <button className='clear-btn'>\n          Clear Items\n        </button>\n      </div>\n    </section>  \n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}